<snippet>
	<content><![CDATA[
//sieve
const lli N = 10000005;
bitset<N+1>mark;
vector<lli>primes;
void sieve()
{
    mark[2] = 0;
    primes.push_back(2);
    for(lli i = 4; i<=N; i+=2) mark[i] = 1;
    for(lli i = 3; i<=N; i+=2)
    {
        if(mark[i]==0)
        {
            for(lli j = i*i; j<=N; j+=i*2) mark[j] = 1;
            primes.push_back(i);
        }
    }
}

lli NOD(lli n)
{
    lli nod = 1;
    for(lli i = 0; primes[i]*primes[i]<=n; i++)
    {
        if(n%primes[i]==0)
        {
            lli k = 0;
            while(n%primes[i]==0)
            {
                n/=primes[i];
                k++;
                if(n==0 || n==1)break;
            }
            nod*=(k+1);//nod(n) = (k1+1)*(k2+1)*----*(kn+1);

        }
    }

    /* If the number N is divided by a prime number than the
        sum has to be multiped by (1+1) where first 1 is the count of
        that prime number, N is divisible by and second 1 is the plus one
        of the formula. */
    if(n!=1)
    {
        nod*=(1+1);
    }
    return nod;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>NOD</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
