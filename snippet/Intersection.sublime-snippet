<snippet>
	<content><![CDATA[
vector<int>intersection(vector<int>&ar1, vector<int>&ar2)
{
    int sz = min(ar1.size() ,ar2.size());
    vector<int>temp(sz);
    sort(ar1.begin(), ar1.end());
    sort(ar2.begin(), ar2.end());
    auto last = set_intersection(ar1.begin(), ar1.end(), ar2.begin(), ar2.end(), temp.begin());
    vector<int>ans;
    for(auto it = temp.begin(); it!=last; it++)
    {
        ans.push_back(*it);
    }
    return ans;
}
//solution here
void solve_the_problem(int T)
{
    int n;
    cin>>n;
    vint ar1(n), ar2(n);
    inv(ar1);
    inv(ar2);
    vector<int>ans = intersection(ar1, ar2);
    for(int i = 0; i<ans.size(); i++)
    {
        cout<<ans[i]<<" ";
    }
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>Intersection</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
