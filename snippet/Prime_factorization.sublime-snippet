<snippet>
	<content><![CDATA[
//sieve
const lli N = 10000005;
bitset<N+1>mark;
vector<lli>primes;
void sieve()
{
    mark[2] = 0;
    primes.push_back(2);
    for(lli i = 4; i<=N; i+=2) mark[i] = 1;
    for(lli i = 3; i<=N; i+=2)
    {
        if(mark[i]==0)
        {
            for(lli j = i*i; j<=N; j+=i*2) mark[j] = 1;
            primes.push_back(i);
        }
    }
}

map<lli,lli>prime_factorization(lli n)
{
    map<lli,lli>mp;
    for(lli i = 0; primes[i]*primes[i]<=n; i++)
    {
        lli ex = 0;
        while(n%primes[i]==0)
        {
            ex++;
            n/=primes[i];
        }
        if(ex>0)
        {
            mp[primes[i]] = ex;
        }
    }
    if(n>1)
    {
        mp[n] = 1;
    }
    return mp;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>Prime_factorization</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
